
## 6.5 Ordered Logit Models {#c6s5 .first}

We now turn our attention to models for *ordered* categorical outcomes.
Obviously the multinomial and sequential logit models can be applied as
well, but they make no explicit use of the fact that the categories are
ordered. The models considered here are specifically designed for
ordered data.

### Housing Conditions in Copenhagen

We will use data from 1681 residents of twelve areas in Copenhagen,
classified in terms of the type of housing that they have (tower blocks,
apartments, atrium houses and terraced houses), their feeling of
influence on apartment management (low, medium, high), their degree of
contact with the neighbors (low, high), and their satisfaction with
housing conditions (low, medium, high).

The data are available in the datasets section and can be read directly
from there.

```s
	use https://grodri.github.io/datasets/copen, clear
	list in 1/6
```

We will treat satisfaction as the outcome and type of housing, feeling
of influence and contact with the neighbors as categorical predictors.

It will be useful for comparison purposes to fit the saturated
multinomial logit model, where each of the 24 combinations of housing
type, influence and contact, has its own multinomial distribution.
The group code can easily be generated from the observation number, and
the easiest way to fit the model is to treat the code as a *factor*.

```s
	gen group = int((_n-1)/3)+1
	quietly mlogit satisfaction i.group [fw=n]
	estimates store sat
	di e(ll)
```

The log likelihood is -1715.7.
You can verify that this is sum(n*log(p)), where n are the counts and p the
proportions for the categories of satisfaction within each of the 24 groups.

### The Proportional Odds Model

The next task is to fit the additive ordered logit model from Table 6.5
in the notes.

```s
	ologit satis i.housing  i.influence i.contact [fw=n]
	estimates store additive
	lrtest . sat, force
```

The log-likelihood is -1739.6, so the deviance for this model compared
to the saturated multinomial model is 47.7 on 40 d.f.
This is a perfectly valid test because the models are nested, but Stata is
cautious; if you type `lrtest . sat` it will complain that the [test
involves different estimators: mlogit vs. ologit]{style="color:red"}.
Fortunately we can insist with the `force` option, which is what I have
done. Use cautiously!

The bottom line is that the deviance is not much more than one would
expect when saving 40 parameters, so we have no evidence against the
additive model. To be thorough, however, we will explore individual
interactions just in case the deviance is concentrated on a few d.f.

### Models with Interactions

The next step is to explore two-factor interactions.

```s
	quietly ologit satis i.housing#i.influence i.contact [fw=n]
	lrtest . sat, force
	quietly ologit satis i.housing#i.contact i.influence [fw=n]
	lrtest . sat, force
	quietly ologit satis i.housing i.influence#i.contact [fw=n]
	lrtest . sat, force
```

The interaction between housing and influence reduces the deviance by
about half, at the expense of only six d.f., so it is worth a second
look. The interaction between housing and contact makes a much smaller
dent, and the interaction between influence and contact adds practically
nothing.

We could also compare each of these models to the additive model, thus testing
the interaction directly. We would get chisquareds of 22.51 on 6 d.f.,
8.67 on 3 d.f. and 0.21 on 2 d.f.

Clearly the interaction to add is the first one, allowing the
association between satisfaction with housing and a feeling of influence
on management, net of contact with neighbors, to depend on the type of
housing. [To examine parameter estimates we refit the model:]{.stata}

```s
	ologit satis i.housing##i.influence i.contact [fw=n] 
	lrtest . sat, force
	lrtest additive .
```

The model deviance of 25.2 on 34 d.f. is not significant. To test for
the interaction effect we compare this model with the additive model,
obtaining a chi-squared statistic of 22.5 on six d.f., which is
significant at the 0.001 level.

At this point one might consider adding a second interaction. The
obvious choice is to allow the association between satisfaction and
contact with neighbors to depend on the type of housing. This would
reduce the deviance by 7.95 at the expense of three d.f., a gain that
just makes the conventional 5% cutoff with a p-value of 0.047. In the
interest of simplicity, however, we will not pursue this addition.

### Interpretation of Parameter Estimates

The estimates indicate that respondents who have high contact with their
neighbors are more satisfied than respondents with low contact who live
in the same type of housing and have the same feeling of influence on
management. The difference is estimated as 0.372 units in the underlying
logistic scale. Dividing by the standard deviation of the (standard)
logistic distribution we obtain

```s
	display _b[2.contact]/(_pi/sqrt(3))
```

So the difference in satisfaction between high and low contact with
neighbors, among respondents with the same housing and influence, is
0.205 standard deviations.

Alternatively, we can exponentiate the coefficient:

```s
	di exp(_b[2.contact])
```

The odds of reporting high satisfaction (relative to medium or low), are
45% higher among tenants who have high contact with the neighbors
than among tenants with low contact and have the same type of housing and
influence. The odds of reporting medium or high satisfaction (as opposed
to low) are also 45% higher in this comparison.

Interpretation of the effects of housing type and influence requires
taking into account the interaction effect. In the notes we describe
differences by housing type among those who feel they have little
influence in management, and the effects of influence in each type of
housing.

Let us do something a bit different here, and focus on the joint effects
of housing and influence, combining the main effects and interactions.
The easiest way to do this is to refit the model omitting the main
effects, which causes them to be folded into the interaction.
I also divide the estimates by π/√3 to express them in standard
deviation units in a latent satisfaction scale.

```s
	ologit satis i.housing#i.influence i.contact [fw=n]
	capture drop coef hc ic
	gen z = .
	gen hc = .
	gen ic = .
	mata b = st_matrix("e(b)")
	mata st_store(1::12, "z", b[1::12]':/(pi()/sqrt(3)))
	mata st_store(1::12, "hc",  (1::4) # (1\1\1))
	mata st_store(1::12, "ic",  (1\1\1\1) # (1::3))
	label values hc housing
	label values ic lowmedhi
	set scheme grlog
	graph bar z, over(ic,  gap(0)) over(hc) asyvar ///
	  bar(1, color("221 238 255")) bar(2, color("128 170 230")) ///
	  bar(3, color("51 102 204")) ytitle(Satisfaction) ///
	  legend(ring(0) pos(7) cols(1) region(lwidth(none))) ///
	  title(Satisfaction by Housing Type and Influence)
	graph export fig63.png, replace width(500)
```

![](fig63.png){.img-responsive .center-block .stata}

Satisfaction with housing conditions is highest for residents of tower
blocks who feel they have high influence, and lowest for residents of
terraced houses with low influence. Satisfaction increases with
influence in each type of housing, but the difference is largest for
terraced houses and apartments than fower blocks and atrium houses.

Another way to present the results is by focusing on the effects of
influence within each type of housing or, alternatively, on the effects
of housing type within each category of influence. All we need to do is
substract the values for the reference cell of the control variable.

```s
	// I
	capture drop zi zh
	gen zi = z - z[3*hc - 2]
	graph bar zi, over(ic,  gap(0)) over(hc) asyvar ///
	  bar(1, color("221 238 255")) bar(2, color("128 170 230")) ///
	  bar(3, color("51 102 204")) ytitle(Satisfaction)  ///
	  legend(ring(0) pos(11) cols(1) region(lwidth(none))) name(i, replace) ///
	  title(Effect of influence within categories of housing)
	// H
	gen zh = z - z[ic]
	graph bar zh, over(hc,  gap(0) ///
	  relabel(1 "Tower" 2 "Apart" 3 "Atrium" 4 "Terrace")) over(ic) asyvar ///
	  bar(1, color("221 238 255")) bar(2, color("157 193 238")) ///
	  bar(3, color("101 147 221")) bar(4, color("51 102 204")) ///
	  legend(rows(1) region(lwidth(none))) ytitle(Satisfaction) name(h, replace) ///
	  title(Effect of housing within categories of influence)
	// both
	graph combine i h, xsize(6) ysize(3)
	graph export fig64.png, replace width(750)
```

![](fig64.png){.img-responsive .center-block .stata}

On the left panel we see more clearly the differences by influence in
each type of housing. As noted above, having influence is good,
particularly of you live in a terraced house or apartment. The right
panel shows differences by type of housing within categories of
influence. Tower residents are, generally speaking, more satisfied than
residents of other types of housing, and the differences tend to be
larger when influence is low.

### Estimation of Probabilities

Let us consider predicted probabilities.
Just as in multinomial logit models, the `predict` command computes predicted 
probabilities (the default) or logits. With probabilities you need to specify 
an output variable for each response category. With logits you specify just one
variable which stores the linear predictor x'β, without the cutpoints.
Let us predict the probabilities for everyone.

```s
	predict pSatLow pSatMed pSatHigh
```

We'll look at these results for tower block dwellers with little
influence and with high and low contact with neighbors. The first of
these groups is, of course, the reference cell. I add the condition
`sat==1`
to list the probabilities just once for each group:

```s
	list contact pSatLow pSatMed pSatHigh ///
		if housing==1 & influence==1 & sat==1, clean 
```

We see that among tower tenants with low influence, those with high
contact with their neighbors have a higher probability of high
satisfaction and a lower probability of medium or low satisfaction, than
those with low contact with the neighbors.

It is instructive to reproduce these calculations "by hand". For the
reference cell all we need are the cutpoints. Remember that the model
predicts cumulative probabilities, which is why we difference the results.

```s
	scalar c1 = _b[/cut1]
	scalar c2 = _b[/cut2]
	di invlogit(c1), invlogit(c2)-invlogit(c1),1-invlogit(c2)
```

For the group with high contact we need to *subtract* the corresponding
coefficient from the cutpoints. The change of sign is needed to convert
coefficients from the latent variable to the cumulative probability
formulations (or from upper to lower tails).

```s
	scalar h1 = c1 - _b[2.contact]
	scalar h2 = c2 - _b[2.contact]
	di invlogit(h1), invlogit(h2)-invlogit(h1),1-invlogit(h2)
```

Results agree exactly with the earlier predicted probabilities.

### The Ordered Probit Model

We now consider ordered probit models, starting with the additive model
in Table 6.6:

```s
	oprobit satis i.housing i.influence i.contact [fw=n]
	lrtest . sat, force 
```

The model has a log-likelihood of -1739.8, a little bit below that of
the additive ordered logit. This is also reflected in the slightly
higher deviance.

Next we add the housing by influence interaction

```s
	oprobit satis i.housing##i.influence i.contact [fw=n]
	lrtest . sat, force
```

We now have a log-likelihood of -1728.7 and a deviance of 25.9. which is
almost indistinguishable from the corresponding ordered logit model.

The estimates indicate that tenants with high contact with the neighbors
are 0.228 standard deviations higher in the latent satisfaction scale
than tenants with low contact, who live in the same type of housing and
have the same feeling of influence in management. Recall that the
comparable logit estimate was 0.205.

The probabilities for the two groups compared earlier can be computed
using the `predict` command or more instructively "by hand", using
exactly the same code as before but with the `normal()` c.d.f. instead
of the logistic c.d.f. `invlogit()`.

```s
	scalar z1 = _b[/cut1]
	scalar z2 = _b[/cut2]
	di normal(z1), normal(z2)-normal(z1),1-normal(z2)
	scalar h1 = z1 - _b[2.contact]
	scalar h2 = z2 - _b[2.contact]
	di normal(h1), normal(h2)-normal(h1),1-normal(h2)
```

The main thing to note here is that the results are very close to the
corresponding predictions based on the ordered logit model.

### The Proportional Hazards Model

The third model mentioned in the lecture notes uses a complementary
log-log link and has a proportional hazards interpretation.
Unfortunately, this model can not be fit to ordered multinomial data
using Stata. It is, of course, possible to fit c-log-log models to
binary data, and proportional hazards models to survival data,
as we will see in the next chapter.

<small>Updated fall 2022</small>
